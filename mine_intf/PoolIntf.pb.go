// Code generated by protoc-gen-go. DO NOT EDIT.
// source: PoolIntf.proto

package mine_intf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

func init() { proto.RegisterFile("PoolIntf.proto", fileDescriptor_b3234929de69ea1e) }

var fileDescriptor_b3234929de69ea1e = []byte{
	// 112 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x0b, 0xc8, 0xcf, 0xcf,
	0xf1, 0xcc, 0x2b, 0x49, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xcc, 0xcd, 0xcc, 0x4b,
	0x8d, 0xcf, 0xcc, 0x2b, 0x49, 0x93, 0x12, 0x00, 0x49, 0x05, 0x97, 0x14, 0x95, 0x26, 0x97, 0x40,
	0x24, 0x8d, 0xbc, 0xb8, 0x58, 0x40, 0x62, 0x42, 0x4e, 0x5c, 0xec, 0xe9, 0xa9, 0x25, 0x3e, 0x99,
	0xc5, 0x25, 0x42, 0x52, 0x7a, 0x70, 0x0d, 0x7a, 0x20, 0x39, 0x90, 0x60, 0x50, 0x6a, 0x61, 0x69,
	0x6a, 0x71, 0x89, 0x94, 0x34, 0x56, 0xb9, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0xd4, 0x24, 0x36, 0xb0,
	0x91, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x31, 0x86, 0x1e, 0x81, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PoolClient is the client API for Pool service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PoolClient interface {
	// 获取矿池列表
	GetList(ctx context.Context, in *PoolListRequest, opts ...grpc.CallOption) (*PoolListResponse, error)
}

type poolClient struct {
	cc *grpc.ClientConn
}

func NewPoolClient(cc *grpc.ClientConn) PoolClient {
	return &poolClient{cc}
}

func (c *poolClient) GetList(ctx context.Context, in *PoolListRequest, opts ...grpc.CallOption) (*PoolListResponse, error) {
	out := new(PoolListResponse)
	err := c.cc.Invoke(ctx, "/mine_intf.Pool/getList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PoolServer is the server API for Pool service.
type PoolServer interface {
	// 获取矿池列表
	GetList(context.Context, *PoolListRequest) (*PoolListResponse, error)
}

func RegisterPoolServer(s *grpc.Server, srv PoolServer) {
	s.RegisterService(&_Pool_serviceDesc, srv)
}

func _Pool_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PoolListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoolServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mine_intf.Pool/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoolServer).GetList(ctx, req.(*PoolListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pool_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mine_intf.Pool",
	HandlerType: (*PoolServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getList",
			Handler:    _Pool_GetList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "PoolIntf.proto",
}
