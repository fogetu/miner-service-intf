// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MinerIntf.proto

package mine_intf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

func init() { proto.RegisterFile("MinerIntf.proto", fileDescriptor_f8e124a49e8c6a0c) }

var fileDescriptor_f8e124a49e8c6a0c = []byte{
	// 113 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xf7, 0xcd, 0xcc, 0x4b,
	0x2d, 0xf2, 0xcc, 0x2b, 0x49, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xcc, 0xcd, 0xcc,
	0x4b, 0x8d, 0xcf, 0xcc, 0x2b, 0x49, 0x93, 0x12, 0x04, 0xcb, 0x05, 0x97, 0x14, 0x95, 0x26, 0x97,
	0x40, 0x64, 0x8d, 0x7c, 0xb9, 0x58, 0xc1, 0x82, 0x42, 0x2e, 0x5c, 0xec, 0xe9, 0xa9, 0x25, 0x3e,
	0x99, 0xc5, 0x25, 0x42, 0xd2, 0x7a, 0x70, 0x2d, 0x7a, 0x60, 0x49, 0x90, 0x68, 0x50, 0x6a, 0x61,
	0x69, 0x6a, 0x71, 0x89, 0x94, 0x0c, 0x76, 0xc9, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0xd4, 0x24, 0x36,
	0xb0, 0xa9, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x99, 0x26, 0x6a, 0xb1, 0x86, 0x00, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MinerClient is the client API for Miner service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MinerClient interface {
	// 获取矿机列表
	GetList(ctx context.Context, in *MinerListRequest, opts ...grpc.CallOption) (*MinerListResponse, error)
}

type minerClient struct {
	cc *grpc.ClientConn
}

func NewMinerClient(cc *grpc.ClientConn) MinerClient {
	return &minerClient{cc}
}

func (c *minerClient) GetList(ctx context.Context, in *MinerListRequest, opts ...grpc.CallOption) (*MinerListResponse, error) {
	out := new(MinerListResponse)
	err := c.cc.Invoke(ctx, "/mine_intf.Miner/getList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MinerServer is the server API for Miner service.
type MinerServer interface {
	// 获取矿机列表
	GetList(context.Context, *MinerListRequest) (*MinerListResponse, error)
}

func RegisterMinerServer(s *grpc.Server, srv MinerServer) {
	s.RegisterService(&_Miner_serviceDesc, srv)
}

func _Miner_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MinerListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MinerServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mine_intf.Miner/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MinerServer).GetList(ctx, req.(*MinerListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Miner_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mine_intf.Miner",
	HandlerType: (*MinerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getList",
			Handler:    _Miner_GetList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "MinerIntf.proto",
}
